name: Develop Pull Request review bot

on:
  pull_request:
    types: [ opened, synchronize, edited, labeled ]
    branches:
      - main
      - develop


# Use concurrency to ensure that only one instance of this workflow is running at a time
concurrency:
  group: pr-lint-checker-dev-${{ github.sha }}
  cancel-in-progress: true


jobs:
  load-config:
    uses: ActionTestingX/action-toolbox/.github/workflows/tool-load-config.yaml@ka1
    with:
      python-version: 3.11

#  pr-review:
#    uses: ActionTestingX/action-toolbox/.github/workflows/tool-review-pr.yaml@ka1
#    needs: load-config
#    with:
#      python-version: 3.11
#    secrets:
#      SOURCE_KEY: ${{ secrets.SOURCE_KEY }}

  python-review:
    uses: ActionTestingX/action-toolbox/.github/workflows/tool-review-python.yaml@ka1
    needs: load-config
    if : ${{ needs.load-config.outputs.python_enabled == 'true' }}
    with:
      python-version: 3.11
    secrets:
      CONDA_API_KEY: ${{ secrets.CONDA_API_KEY }}
      PIP_API_KEY: ${{ secrets.PIP_API_KEY }}

  docker-review:
    uses: ActionTestingX/action-toolbox/.github/workflows/tool-review-docker.yaml@ka1
    needs: load-config
    if : ${{ needs.load-config.outputs.docker_enabled == 'true' }}
    with:
      python-version: 3.11
    secrets:
      CONTAINER_REGISTRY_ACR_URL: ${{ secrets.CONTAINER_REGISTRY_ACR_URL }}
      CONTAINER_REGISTRY_ACR_USERNAME: ${{ secrets.CONTAINER_REGISTRY_ACR_USERNAME }}
      CONTAINER_REGISTRY_ACR_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_ACR_PASSWORD }}

  gitops-review:
    uses: ActionTestingX/action-toolbox/.github/workflows/tool-review-gitops.yaml@ka1
    needs: load-config
    if : ${{ needs.load-config.outputs.gitops_enabled == 'true' }}
    with:
      python-version: 3.11
    secrets:
      CONTAINER_REGISTRY_ACR_URL: ${{ secrets.CONTAINER_REGISTRY_ACR_URL }}
      SOURCE_KEY: ${{ secrets.SOURCE_KEY }}
      GITOPS_KEY: ${{ secrets.GITOPS_KEY }}

  pr-review-summary:
    name: Python Check Pull Request
    needs: [ python-review, docker-review, gitops-review ]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install toml==0.10.2

      - name: Checkout PR
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Review all results and write a summary
        id: comment_body
        shell: python
        run: |
          import os
          import base64
          
          def set_output(name, value, encode_it=False):
            if encode_it:
              value = base64.b64encode(value.encode('utf-8')).decode('utf-8')
            with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
                print(f'{name}={value}', file=fh)
          
          def deserialize_str(s):
            return base64.b64decode(s).decode('utf-8')
          
          all_checks = []
          
          # PR
          pr_review_ok = 'true'
          pr_review_str = 'test'
          all_checks.append(pr_review_ok == 'true')
          
          # Python
          python_review_ok = '${{ needs.python-review.outputs.python_review_ok }}'
          python_review_str = '${{ needs.python-review.outputs.python_review_str }}'
          all_checks.append(python_review_ok == 'true')
          
          # check if all_checks are true
          if all(all_checks):
            body = "ðŸ‘‹ Hi there! I have checked your PR and found no issues. Thanks for your contribution!\n"
            set_output('REVIEW_OK', 'true')
          else:
            body = "ðŸ‘‹ Hi there! I have checked your PR and found the following:\n\n"
            set_output('REVIEW_OK', 'false')
          
          body += deserialize_str(pr_review_str)
          body += deserialize_str(python_review_str)
          
          # Set the output
          set_output('body', body, True)
          
          print(os.environ['GITHUB_OUTPUT'])

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const bodyBase64 = '${{ steps.comment_body.outputs.body }}'
            const body = Buffer.from(bodyBase64, 'base64').toString('utf-8')
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

      - name: Fail if linting failed
        if: steps.comment_body.outputs.REVIEW_OK == 'false'
        run: exit 1