name: tool-pylint

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version'
        type: string
        required: false
        default: '3.11'
    outputs:
      pylint_result:
        description: "Pylint result"
        value: ${{ jobs.lintCheck.outputs.pylint_result }}
      isort_result:
        description: "Isort result"
        value: ${{ jobs.lintCheck.outputs.isort_result }}
      black_result:
        description: "Black result"
        value: ${{ jobs.lintCheck.outputs.black_result }}
      ruff_result:
        description: "Ruff result"
        value: ${{ jobs.lintCheck.outputs.ruff_result }}
jobs:
  lintCheck:
    name: Python Lint Pull Request
    runs-on: ubuntu-latest
    outputs:
      pylint_result: ${{ steps.pylint.outputs.pylint_result }}
      isort_result: ${{ steps.isort.outputs.isort_result }}
      black_result: ${{ steps.black.outputs.black_result }}
      ruff_result: ${{ steps.ruff.outputs.ruff_result }}

    steps:
      #####################################################################################################################

      - uses: actions/checkout@v3
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ inputs.python-version }}

      #####################################################################################################################

      - name: Checkout git
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      #####################################################################################################################

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint==3.0.0
          pip install isort==5.12.0
          pip install black==23.10.0
          pip install ruff==0.1.0
          pip install -r requirements.txt

      #####################################################################################################################

      - name: Pylint Analysis
        id: pylint
        run: |
          if pylint $(git ls-files '*.py'); then
            echo "PYLINT_RESULT=true" >> $GITHUB_OUTPUT
          else
            echo "PYLINT_RESULT=false" >> $GITHUB_OUTPUT
          fi

      - name: Isort Check
        id: isort
        run: |
          if isort . --check; then
            echo "ISORT_RESULT=true" >> $GITHUB_OUTPUT
          else
            echo "ISORT_RESULT=false" >> $GITHUB_OUTPUT
          fi

      - name: Black Formatting Check
        id: black
        run: |
          if black ./src --config pyproject.toml --check; then
            echo "BLACK_RESULT=true" >> $GITHUB_OUTPUT
          else
            echo "BLACK_RESULT=false" >> $GITHUB_OUTPUT
          fi

      - name: Ruff Check
        id: ruff
        run: |
          if ruff ./src --no-fix; then
            echo "RUFF_RESULT=true" >> $GITHUB_OUTPUT
          else
            echo "RUFF_RESULT=false" >> $GITHUB_OUTPUT
          fi




