name: tool-docker
on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version'
        type: string
        required: false
        default: '3.11'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:

      - name: Collect docker image team and name
        shell: python
        run: |
          import toml
          import os
          
          data = toml.load("semantic-release.toml")
          
          def set_output(name, value):
            with open(os.environ['GITHUB_ENV'], 'a') as fh:
                print(f'{name}={value}', file=fh)
          
          set_output("DOCKER_ENABLED", data["tool"]["docker"]["enabled"])
          set_output("DOCKER_IMAGE_TEAM", data["tool"]["docker"]["team_name"])
          set_output("DOCKER_IMAGE_NAME", data["tool"]["docker"]["image_name"])
          
          set_output("JSON_ENABLED", data["tool"]["json"]["enabled"])
          set_output("JSON_PACKAGE", data["tool"]["json"]["package_json_path"])
          set_output("JSON_PACKAGE_LOCK", data["tool"]["json"]["package_lock_json_path"])

      #####################################################################################################################

      - name: Echo DOCKER_IMAGE_TEAM & DOCKER_IMAGE_NAME - info only
        run: |
          echo ${{env.DOCKER_ENABLED}}    
          echo ${{env.DOCKER_IMAGE_TEAM}}
          echo ${{env.DOCKER_IMAGE_NAME}}
          echo ${{env.JSON_ENABLED}}    
          echo ${{env.JSON_PACKAGE}}
          echo ${{env.JSON_PACKAGE_LOCK}}

      #####################################################################################################################

      - name: Check if docker image will manage to build with DOCKER_IMAGE_TEAM & DOCKER_IMAGE_NAME
        if: |
          env.DOCKER_ENABLED == 'true' && (
          contains(github.event.pull_request.labels.*.name, 'release-auto') 
          || contains(github.event.pull_request.labels.*.name, 'release-patch') 
          || contains(github.event.pull_request.labels.*.name, 'release-minor') 
          || contains(github.event.pull_request.labels.*.name, 'release-major'))
        run: |
          docker build -t ${{ secrets.CONTAINER_REGISTRY_ACR_URL }}/${{env.DOCKER_IMAGE_TEAM}}/${{env.DOCKER_IMAGE_NAME}}:latest .

      #####################################################################################################################

      - name: Check if acr login is setup correctly
        if: |
          env.DOCKER_ENABLED == 'true' && (
          contains(github.event.pull_request.labels.*.name, 'release-auto') 
          || contains(github.event.pull_request.labels.*.name, 'release-patch') 
          || contains(github.event.pull_request.labels.*.name, 'release-minor') 
          || contains(github.event.pull_request.labels.*.name, 'release-major'))
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY_ACR_URL }}
          username: ${{ secrets.CONTAINER_REGISTRY_ACR_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_ACR_PASSWORD }}
